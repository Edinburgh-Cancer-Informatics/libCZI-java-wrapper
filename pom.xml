<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>uk.ac.ed.eci</groupId>
  <artifactId>libczi-wrapper</artifactId>
  <version>0.1-SNAPSHOT</version>

  <name>libczi-wrapper</name>
  <url>https://github.com/Edinburgh-Cancer-Informatics/libCZI-java-wrapper</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.release>22</maven.compiler.release>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>5.10.2</version>  <!-- Or the latest version -->
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>5.10.2</version> <!-- Or the latest version -->
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <version>5.10.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-databind</artifactId>
        <version>2.19.0</version>
    </dependency>    
  </dependencies>

  <build>
    <!-- The <pluginManagement> section only declares plugin configurations, but doesn't bind them to the build lifecycle. -->
    <!-- Moving the plugins into a regular <plugins> block ensures they are actually executed. -->
    <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>3.2.5</version>  <!-- Or the latest version -->
          <configuration>
            <argLine>-Djava.library.path=${project.basedir}/src/main/resources/native</argLine>
          </configuration>
        </plugin>
        <!-- clean lifecycle, see
        https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle -->
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <!-- default lifecycle, jar packaging: see
        https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.13.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>
        <!-- site lifecycle, see
        https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle -->
        <plugin>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.7.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>3.3.0</version>
          <executions>
              <execution>
                  <id>attach-sources</id>
                  <goals>
                      <goal>jar-no-fork</goal>
                  </goals>
              </execution>
          </executions>
      </plugin>
      <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>3.6.3</version>
          <executions>
              <execution>
                  <id>attach-javadocs</id>
                  <goals>
                      <goal>jar</goal>
                  </goals>
              </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>3.1.0</version>
          <executions>
            <execution>
              <?m2e execute onConfiguration,onIncremental?>
              <id>download-test-image</id>
              <phase>generate-test-resources</phase>
              <goals>
                <goal>run</goal>
              </goals>
              <configuration>
                <target>
                  <mkdir dir="${project.basedir}/test-images"/>
                  <get src="https://openslide.cs.cmu.edu/download/openslide-testdata/Zeiss/Zeiss-5-JXR.czi" 
                       dest="${project.basedir}/test-images/test-image.czi" 
                       skipexisting="true"
                       verbose="true"/>
                  <echo>Test image is available at ${project.basedir}/test-images/test-image.czi</echo>
                </target>
              </configuration>
            </execution>
            <execution>
              <?m2e execute onConfiguration,onIncremental?>
              <id>build-native</id>
              <phase>generate-resources</phase> <!-- Or an appropriate phase, like "compile" -->
              <goals>
                <goal>run</goal>
              </goals>
              <configuration>
                <target>
                  <exec executable="./build-native.sh" dir="${project.basedir}" failonerror="true">
                    <!-- If you're on Windows, use build_native.bat instead -->
                    <!--  <exec executable="build_native.bat" dir="${project.basedir}"
                    failonerror="true"> -->
                    <env key="OUTPUT_DIR" value="${project.basedir}/src/main/resources/native" />
                    <!-- You can pass other environment variables to your script here -->
                  </exec>
                </target>
              </configuration>
            </execution>
          </executions>
        </plugin>
    </plugins>
  </build>
</project>