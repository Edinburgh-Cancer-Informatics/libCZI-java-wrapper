package uk.ac.ed.eci.libCZI.document;

import java.io.IOException;
import java.time.OffsetDateTime;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.datatype.jsr310.JavaTimeModule;

/**
 * The class wraps the JSON that is generated by the API
 * from general document information.  This is created
 * from the documentInfo method of the Metadata
 * 
 * @see Metdata
 * @author Paul D Mitchell
 */
public class GeneralDocumentInfo {
    @JsonProperty("creation_date_time")
    private OffsetDateTime creationDateTime;

    @JsonProperty("user_name")
    private String username;

    public static GeneralDocumentInfo fromJson(String json) {
        ObjectMapper mapper = new ObjectMapper();
        mapper.registerModule(new JavaTimeModule());
        try {
            return mapper.readValue(json, GeneralDocumentInfo.class);
        } catch (IOException e) {
            throw new RuntimeException("Failed to parse JSON", e);
        }
    }

    /**
     * The JSON has a data that is in ISO 8601 with TZ
     * 
     * @return DateTime from JSON
     */
    public OffsetDateTime creationDateTime() {
        return creationDateTime;
    }

    /**
     * The user_name field from the JSON
     * 
     * @return String username if exists
     */
    public String username() {
        return username;
    }
}
